Thread 59 (Thread 0x7f6ab4ff9700 (LWP 73)):
#0  __lll_lock_wait (futex=futex@entry=0x7f6a7008d650, private=0) at lowlevellock.c:52
#1  0x00007f6b8a5960a3 in __GI___pthread_mutex_lock (mutex=0x7f6a7008d650) at ../nptl/pthread_mutex_lock.c:80
#2  0x0000000003090ce0 in __gthread_mutex_lock (__mutex=0x7f6a7008d650) at /usr/include/x86_64-linux-gnu/c++/9/bits/gthr-default.h:749
#3  0x0000000003091044 in std::mutex::lock (this=0x7f6a7008d650) at /usr/include/c++/9/bits/std_mutex.h:100
#4  0x0000000003099517 in std::lock_guard<std::mutex>::lock_guard (this=0x7f6ab4fef7b8, __m=...) at /usr/include/c++/9/bits/std_mutex.h:159
#5  0x00000000047f2d3f in nebula::raftex::Host::<lambda(auto:154&&)>::operator()<nebula::StatusOr<std::pair<long int, long int> > >(nebula::StatusOr<std::pair<long, long> > &&) const (__closure=0x7f6b38004790, status=...) at /data/src/balance-fix-nebula/src/kvstore/raftex/Host.cpp:338
#6  0x00000000047f892a in folly::futures::detail::<lambda()>::operator()(void) const (this=0x7f6ab4fef830) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:98
#7  0x00000000047fb3e2 in folly::futures::detail::InvokeResultWrapper<void>::wrapResult<folly::futures::detail::wrapInvoke(folly::Try<T>&&, F&&) [with T = nebula::StatusOr<std::pair<long int, long int> >; F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>]::<lambda()> >(folly::futures::detail::<lambda()>) (fn=...) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:90
#8  0x00000000047f89c1 in folly::futures::detail::wrapInvoke<nebula::StatusOr<std::pair<long int, long int> >, nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)> >(folly::Try<nebula::StatusOr<std::pair<long, long> > > &&, nebula::raftex::Host::<lambda(auto:154&&)> &&) (t=..., f=...) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:108
#9  0x00000000047f8a2f in folly::Future<nebula::StatusOr<std::pair<long, long> > >::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>::operator()(folly::Executor::KeepAlive<folly::Executor> &&, folly::Try<nebula::StatusOr<std::pair<long, long> > > &&) (this=0x7f6b38004790, t=...) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:991
#10 0x00000000047fb4ca in folly::futures::detail::CoreCallbackState<folly::Unit, folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >; typename folly::futures::detail::valueCallableResult<T, F>::value_type = folly::Unit]::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)> >::invoke<folly::Executor::KeepAlive<folly::Executor>, folly::Try<nebula::StatusOr<std::pair<long, long> > > >(void) (this=0x7f6b38004790) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:144
#11 0x00000000047fb551 in folly::futures::detail::detail_msvc_15_7_workaround::invoke<folly::futures::detail::tryExecutorCallableResult<nebula::StatusOr<std::pair<long int, long int> >, folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>, void>, folly::futures::detail::CoreCallbackState<folly::Unit, folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)> >, nebula::StatusOr<std::pair<long int, long int> > >(folly::futures::detail::tryExecutorCallableResult<nebula::StatusOr<std::pair<long int, long int> >, folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >; typename folly::futures::detail::valueCallableResult<T, F>::value_type = folly::Unit]::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>, void>, folly::futures::detail::CoreCallbackState<folly::Unit, folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >; typename folly::futures::detail::valueCallableResult<T, F>::value_type = folly::Unit]::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)> > &, folly::Executor::KeepAlive<folly::Executor> &&, folly::Try<nebula::StatusOr<std::pair<long, long> > > &&) (state=..., ka=..., t=...) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:337
#12 0x00000000047fb5cd in folly::futures::detail::FutureBase<nebula::StatusOr<std::pair<long, long> > >::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>::<lambda()>::operator()(void) const (this=0x7f6ab4fefa20) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:384
#13 0x00000000047fe3b7 in folly::makeTryWith<folly::futures::detail::FutureBase<T>::thenImplementation(F&&, R, folly::futures::detail::InlineContinuation) [with F = folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>; R = folly::futures::detail::tryExecutorCallableResult<nebula::StatusOr<std::pair<long int, long int> >, folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>, void>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)> mutable::<lambda()> >(folly::futures::detail::FutureBase<nebula::StatusOr<std::pair<long, long> > >::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>::<lambda()> &&) (f=...) at /data/src/raft-nebula/build/third-party/install/include/folly/Try-inl.h:288
#14 0x00000000047fb6cd in folly::futures::detail::FutureBase<nebula::StatusOr<std::pair<long, long> > >::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>::operator()(folly::Executor::KeepAlive<folly::Executor> &&, folly::Try<nebula::StatusOr<std::pair<long, long> > > &&) (this=0x7f6b38004790, ka=..., t=...) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:382
#15 0x00000000048001cf in folly::futures::detail::Core<nebula::StatusOr<std::pair<long, long> > >::<lambda(folly::futures::detail::CoreBase&, folly::Executor::KeepAlive<folly::Executor>&&, folly::exception_wrapper*)>::operator()(folly::futures::detail::CoreBase &, folly::Executor::KeepAlive<folly::Executor> &&, folly::exception_wrapper *) (this=0x7f6b38004790, coreBase=..., ka=..., ew=0x0) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/detail/Core.h:637
#16 0x0000000004804946 in folly::detail::function::FunctionTraits<void(folly::futures::detail::CoreBase&, folly::Executor::KeepAlive<folly::Executor>&&, folly::exception_wrapper*)>::callSmall<folly::futures::detail::Core<T>::setCallback(F&&, std::shared_ptr<folly::RequestContext>&&, folly::futures::detail::InlineContinuation) [with F = folly::futures::detail::FutureBase<T>::thenImplementation(F&&, R, folly::futures::detail::InlineContinuation) [with F = folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>; R = folly::futures::detail::tryExecutorCallableResult<nebula::StatusOr<std::pair<long int, long int> >, folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>, void>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::futures::detail::CoreBase&, folly::Executor::KeepAlive<>&&, folly::exception_wrapper*)> >(folly::detail::function::CallArg, folly::detail::function::CallArg, folly::detail::function::CallArg, folly::detail::function::Data &) (args#0=..., args#1=..., args#2=0x0, p=...) at /data/src/raft-nebula/build/third-party/install/include/folly/Function.h:371
#17 0x00000000051ce040 in ?? ()
#18 0x00000000051cf121 in folly::futures::detail::CoreBase::doCallback(folly::Executor::KeepAlive<folly::Executor>&&, folly::futures::detail::State) ()
#19 0x00000000051cf6ac in folly::futures::detail::CoreBase::setCallback_(folly::Function<void (folly::futures::detail::CoreBase&, folly::Executor::KeepAlive<folly::Executor>&&, folly::exception_wrapper*)>&&, std::shared_ptr<folly::RequestContext>&&, folly::futures::detail::InlineContinuation) ()
#20 0x00000000048002d0 in folly::futures::detail::Core<nebula::StatusOr<std::pair<long, long> > >::setCallback<folly::futures::detail::FutureBase<T>::thenImplementation(F&&, R, folly::futures::detail::InlineContinuation) [with F = folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>; R = folly::futures::detail::tryExecutorCallableResult<nebula::StatusOr<std::pair<long int, long int> >, folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>, void>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)> >(folly::futures::detail::FutureBase<nebula::StatusOr<std::pair<long, long> > >::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)> &&, std::shared_ptr<folly::RequestContext> &&, folly::futures::detail::InlineContinuation) (this=0x7f6b38004780, func=..., context=..., allowInline=folly::futures::detail::InlineContinuation::forbid) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/detail/Core.h:640
#21 0x00000000047fe55a in folly::futures::detail::FutureBase<nebula::StatusOr<std::pair<long, long> > >::setCallback_<folly::futures::detail::FutureBase<T>::thenImplementation(F&&, R, folly::futures::detail::InlineContinuation) [with F = folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>; R = folly::futures::detail::tryExecutorCallableResult<nebula::StatusOr<std::pair<long int, long int> >, folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>, void>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)> >(folly::futures::detail::FutureBase<nebula::StatusOr<std::pair<long, long> > >::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)> &&, folly::futures::detail::InlineContinuation) (this=0x7f6ab4feff08, func=..., allowInline=folly::futures::detail::InlineContinuation::forbid) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:313
#22 0x00000000047fb8aa in folly::futures::detail::FutureBase<nebula::StatusOr<std::pair<long, long> > >::thenImplementation<folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>, folly::futures::detail::tryExecutorCallableResult<nebula::StatusOr<std::pair<long int, long int> >, folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>, void> >(folly::Future<nebula::StatusOr<std::pair<long, long> > >::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)> &&, folly::futures::detail::tryExecutorCallableResult<nebula::StatusOr<std::pair<long int, long int> >, folly::Future<T>::thenValue(F&&) && [with F = nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)>; T = nebula::StatusOr<std::pair<long int, long int> >; typename folly::futures::detail::valueCallableResult<T, F>::value_type = folly::Unit]::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<nebula::StatusOr<std::pair<long int, long int> > >&&)>, void>, folly::futures::detail::InlineContinuation) (this=0x7f6ab4feff08, func=..., allowInline=folly::futures::detail::InlineContinuation::forbid) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:374
#23 0x00000000047f8afb in folly::Future<nebula::StatusOr<std::pair<long, long> > >::thenValue<nebula::raftex::Host::startSendSnapshot()::<lambda(auto:154&&)> >(nebula::raftex::Host::<lambda(auto:154&&)> &&) (this=0x7f6ab4feff08, func=...) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:995
#24 0x00000000047f33ee in nebula::raftex::Host::startSendSnapshot (this=0x7f6a7008d5e0) at /data/src/balance-fix-nebula/src/kvstore/raftex/Host.cpp:337
#25 0x00000000047f2080 in nebula::raftex::Host::prepareAppendLogRequest (this=0x7f6a7008d5e0) at /data/src/balance-fix-nebula/src/kvstore/raftex/Host.cpp:288
#26 0x00000000047ef143 in nebula::raftex::Host::appendLogs (this=0x7f6a7008d5e0, eb=0x7f6a98000e30, term=31, logId=23745, committedLogId=23742, prevLogTerm=30, prevLogId=23744) at /data/src/balance-fix-nebula/src/kvstore/raftex/Host.cpp:125
#27 0x0000000004794253 in nebula::raftex::RaftPart::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>::operator()(void) const (__closure=0x7f6b5402a210) at /data/src/balance-fix-nebula/src/kvstore/raftex/RaftPart.cpp:812
#28 0x00000000047a84ec in folly::<lambda(auto:54&&)>::operator()<folly::Unit>(folly::Unit &&) (this=0x7f6b5402a210) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:1206
#29 0x00000000047afe72 in folly::futures::detail::<lambda()>::operator()(void) const (this=0x7f6ab4ff03d0) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:101
#30 0x00000000047b7f15 in folly::futures::detail::InvokeResultWrapperBase<folly::Future<nebula::raftex::cpp2::AppendLogResponse> >::wrapResult<folly::futures::detail::wrapInvoke(folly::Try<T>&&, F&&) [with T = folly::Unit; F = folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>]::<lambda(auto:54&&)>]::<lambda()> >(folly::futures::detail::<lambda()>) (fn=...) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:73
#31 0x00000000047aff22 in folly::futures::detail::wrapInvoke<folly::Unit, folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>]::<lambda(auto:54&&)> >(folly::Try<folly::Unit> &&, folly::<lambda(auto:54&&)> &&) (t=..., f=...) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:108
#32 0x00000000047aff91 in folly::Future<folly::Unit>::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<folly::Unit>&&)>::operator()(folly::Executor::KeepAlive<folly::Executor> &&, folly::Try<folly::Unit> &&) (this=0x7f6b5402a210, t=...) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:991
#33 0x00000000047b7ffe in folly::futures::detail::CoreCallbackState<nebula::raftex::cpp2::AppendLogResponse, folly::Future<T>::thenValue(F&&) && [with F = folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>; typename folly::isFutureOrSemiFuture<decltype (declval<Func>()())>::Inner = nebula::raftex::cpp2::AppendLogResponse]::<lambda(auto:54&&)>; T = folly::Unit; typename folly::futures::detail::valueCallableResult<T, F>::value_type = nebula::raftex::cpp2::AppendLogResponse]::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<folly::Unit>&&)> >::invoke<folly::Executor::KeepAlive<folly::Executor>, folly::Try<folly::Unit> >(void) (this=0x7f6b5402a210) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:144
#34 0x00000000047b805f in folly::futures::detail::CoreCallbackState<nebula::raftex::cpp2::AppendLogResponse, folly::Future<T>::thenValue(F&&) && [with F = folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>; typename folly::isFutureOrSemiFuture<decltype (declval<Func>()())>::Inner = nebula::raftex::cpp2::AppendLogResponse]::<lambda(auto:54&&)>; T = folly::Unit; typename folly::futures::detail::valueCallableResult<T, F>::value_type = nebula::raftex::cpp2::AppendLogResponse]::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<folly::Unit>&&)> >::<lambda()>::operator()(void) const (this=0x7f6b5402a210) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:149
#35 0x00000000047c92aa in folly::makeTryWithNoUnwrap<folly::futures::detail::CoreCallbackState<T, F>::tryInvoke(Args&& ...) [with Args = {folly::Executor::KeepAlive<folly::Executor>, folly::Try<folly::Unit>}; T = nebula::raftex::cpp2::AppendLogResponse; F = folly::Future<T>::thenValue(F&&) && [with F = folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>]::<lambda(auto:54&&)>; T = folly::Unit]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<folly::Unit>&&)>]::<lambda()> >(folly::futures::detail::CoreCallbackState<nebula::raftex::cpp2::AppendLogResponse, folly::Future<T>::thenValue(F&&) && [with F = folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>; typename folly::isFutureOrSemiFuture<decltype (declval<Func>()())>::Inner = nebula::raftex::cpp2::AppendLogResponse]::<lambda(auto:54&&)>; T = folly::Unit; typename folly::futures::detail::valueCallableResult<T, F>::value_type = nebula::raftex::cpp2::AppendLogResponse]::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<folly::Unit>&&)> >::<lambda()> &&) (f=...) at /data/src/raft-nebula/build/third-party/install/include/folly/Try-inl.h:257
#36 0x00000000047c0520 in folly::makeTryWith<folly::futures::detail::CoreCallbackState<T, F>::tryInvoke(Args&& ...) [with Args = {folly::Executor::KeepAlive<folly::Executor>, folly::Try<folly::Unit>}; T = nebula::raftex::cpp2::AppendLogResponse; F = folly::Future<T>::thenValue(F&&) && [with F = folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>]::<lambda(auto:54&&)>; T = folly::Unit]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<folly::Unit>&&)>]::<lambda()> >(folly::futures::detail::CoreCallbackState<nebula::raftex::cpp2::AppendLogResponse, folly::Future<T>::thenValue(F&&) && [with F = folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>; typename folly::isFutureOrSemiFuture<decltype (declval<Func>()())>::Inner = nebula::raftex::cpp2::AppendLogResponse]::<lambda(auto:54&&)>; T = folly::Unit; typename folly::futures::detail::valueCallableResult<T, F>::value_type = nebula::raftex::cpp2::AppendLogResponse]::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<folly::Unit>&&)> >::<lambda()> &&) (f=...) at /data/src/raft-nebula/build/third-party/install/include/folly/Try-inl.h:279
#37 0x00000000047b80d7 in folly::futures::detail::CoreCallbackState<nebula::raftex::cpp2::AppendLogResponse, folly::Future<T>::thenValue(F&&) && [with F = folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>; typename folly::isFutureOrSemiFuture<decltype (declval<Func>()())>::Inner = nebula::raftex::cpp2::AppendLogResponse]::<lambda(auto:54&&)>; T = folly::Unit; typename folly::futures::detail::valueCallableResult<T, F>::value_type = nebula::raftex::cpp2::AppendLogResponse]::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<folly::Unit>&&)> >::tryInvoke<folly::Executor::KeepAlive<folly::Executor>, folly::Try<folly::Unit> >(void) (this=0x7f6b5402a210) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:149
#38 0x00000000047b815e in folly::futures::detail::detail_msvc_15_7_workaround::tryInvoke<folly::futures::detail::tryExecutorCallableResult<folly::Unit, folly::Future<T>::thenValue(F&&) && [with F = folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>]::<lambda(auto:54&&)>; T = folly::Unit]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<folly::Unit>&&)>, void>, folly::futures::detail::CoreCallbackState<nebula::raftex::cpp2::AppendLogResponse, folly::Future<T>::thenValue(F&&) && [with F = folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>]::<lambda(auto:54&&)>; T = folly::Unit]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<folly::Unit>&&)> >, folly::Unit>(folly::futures::detail::tryExecutorCallableResult<folly::Unit, folly::Future<T>::thenValue(F&&) && [with F = folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>; typename folly::isFutureOrSemiFuture<decltype (declval<Func>()())>::Inner = nebula::raftex::cpp2::AppendLogResponse]::<lambda(auto:54&&)>; T = folly::Unit; typename folly::futures::detail::valueCallableResult<T, F>::value_type = nebula::raftex::cpp2::AppendLogResponse]::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<folly::Unit>&&)>, void>, folly::futures::detail::CoreCallbackState<nebula::raftex::cpp2::AppendLogResponse, folly::Future<T>::thenValue(F&&) && [with F = folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>; typename folly::isFutureOrSemiFuture<decltype (declval<Func>()())>::Inner = nebula::raftex::cpp2::AppendLogResponse]::<lambda(auto:54&&)>; T = folly::Unit; typename folly::futures::detail::valueCallableResult<T, F>::value_type = nebula::raftex::cpp2::AppendLogResponse]::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<folly::Unit>&&)> > &, folly::Executor::KeepAlive<folly::Executor> &&, folly::Try<folly::Unit> &&) (state=..., ka=..., t=...) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:349
#39 0x00000000047b824f in folly::futures::detail::FutureBase<folly::Unit>::<lambda(folly::Executor::KeepAlive<folly::Executor>&&, folly::Try<folly::Unit>&&)>::operator()(folly::Executor::KeepAlive<folly::Executor> &&, folly::Try<folly::Unit> &&) (this=0x7f6b5402a210, ka=..., t=...) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/Future-inl.h:436
#40 0x00000000047c94ad in folly::futures::detail::Core<folly::Unit>::<lambda(folly::futures::detail::CoreBase&, folly::Executor::KeepAlive<folly::Executor>&&, folly::exception_wrapper*)>::operator()(folly::futures::detail::CoreBase &, folly::Executor::KeepAlive<folly::Executor> &&, folly::exception_wrapper *) (this=0x7f6b5402a210, coreBase=..., ka=..., ew=0x0) at /data/src/raft-nebula/build/third-party/install/include/folly/futures/detail/Core.h:637
#41 0x00000000047dab9c in folly::detail::function::FunctionTraits<void(folly::futures::detail::CoreBase&, folly::Executor::KeepAlive<folly::Executor>&&, folly::exception_wrapper*)>::callBig<folly::futures::detail::Core<T>::setCallback(F&&, std::shared_ptr<folly::RequestContext>&&, folly::futures::detail::InlineContinuation) [with F = folly::futures::detail::FutureBase<T>::thenImplementation(F&&, R, folly::futures::detail::InlineContinuation) [with F = folly::Future<T>::thenValue(F&&) && [with F = folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>]::<lambda(auto:54&&)>; T = folly::Unit]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<folly::Unit>&&)>; R = folly::futures::detail::tryExecutorCallableResult<folly::Unit, folly::Future<T>::thenValue(F&&) && [with F = folly::via(folly::Executor::KeepAlive<>, Func&&) [with Func = nebula::raftex::RaftPart::replicateLogs(folly::EventBase*, nebula::raftex::AppendLogsIterator, nebula::TermID, nebula::LogID, nebula::LogID, nebula::TermID, nebula::LogID)::<lambda(std::shared_ptr<nebula::raftex::Host>)>::<lambda()>]::<lambda(auto:54&&)>; T = folly::Unit]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<folly::Unit>&&)>, void>; T = folly::Unit]::<lambda(folly::Executor::KeepAlive<>&&, folly::Try<folly::Unit>&&)>; T = folly::Unit]::<lambda(folly::futures::detail::CoreBase&, folly::Executor::KeepAlive<>&&, folly::exception_wrapper*)> >(folly::detail::function::CallArg, folly::detail::function::CallArg, folly::detail::function::CallArg, folly::detail::function::Data &) (args#0=..., args#1=..., args#2=0x0, p=...) at /data/src/raft-nebula/build/third-party/install/include/folly/Function.h:385
#42 0x00000000051ce040 in ?? ()
#43 0x000000000521bd99 in bool folly::AtomicNotificationQueue<folly::Function<void ()> >::drive<folly::EventBase::FuncRunner&>(folly::EventBase::FuncRunner&) ()
#44 0x000000000521cef1 in non-virtual thunk to folly::EventBaseAtomicNotificationQueue<folly::Function<void ()>, folly::EventBase::FuncRunner>::handlerReady(unsigned short) ()
#45 0x00000000052d7913 in ?? ()
#46 0x00000000052d8037 in event_base_loop ()
#47 0x0000000005215e2e in folly::EventBase::loopBody(int, bool) ()
#48 0x0000000005216772 in folly::EventBase::loop() ()
#49 0x000000000521948c in folly::EventBase::loopForever() ()
#50 0x000000000519d761 in folly::IOThreadPoolExecutor::threadRun(std::shared_ptr<folly::ThreadPoolExecutor::Thread>) ()
#51 0x00000000051ac98b in void folly::detail::function::FunctionTraits<void ()>::callBig<std::_Bind<void (folly::ThreadPoolExecutor::*(folly::ThreadPoolExecutor*, std::shared_ptr<folly::ThreadPoolExecutor::Thread>))(std::shared_ptr<folly::ThreadPoolExecutor::Thread>)> >(folly::detail::function::Data&) ()
#52 0x0000000003099640 in folly::detail::function::FunctionTraits<void ()>::operator()() (this=0x6bf23f0) at /data/src/raft-nebula/build/third-party/install/include/folly/Function.h:400
#53 0x00000000030b86b0 in folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}::operator()() (__closure=0x6bf23f0) at /data/src/raft-nebula/build/third-party/install/include/folly/executors/thread_factory/NamedThreadFactory.h:40
#54 0x00000000031153a7 in std::__invoke_impl<void, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(std::__invoke_other, folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&) (__f=...) at /usr/include/c++/9/bits/invoke.h:60
#55 0x00000000031142b6 in std::__invoke<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}>(std::__invoke_result&&, (folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}&&)...) (__fn=...) at /usr/include/c++/9/bits/invoke.h:95
#56 0x00000000031133c6 in std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x6bf23f0) at /usr/include/c++/9/thread:244
#57 0x0000000003112708 in std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> >::operator()() (this=0x6bf23f0) at /usr/include/c++/9/thread:251
#58 0x000000000310f43a in std::thread::_State_impl<std::thread::_Invoker<std::tuple<folly::NamedThreadFactory::newThread(folly::Function<void ()>&&)::{lambda()#1}> > >::_M_run() (this=0x6bf23e0) at /usr/include/c++/9/thread:195
#59 0x00000000057baf34 in execute_native_thread_routine ()
#60 0x00007f6b8a593609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#61 0x00007f6b8a4ba293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
